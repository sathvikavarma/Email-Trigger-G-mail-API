int _tmain(int argc, _TCHAR* argv[])
{
    ::CoInitialize(NULL);
    IMailPtr oSmtp = NULL;
    oSmtp.CreateInstance(__uuidof(EASendMailObjLib::Mail));
    oSmtp->LicenseCode = _T("TryIt");
    // Set your gmail email address
    oSmtp->FromAddr = _T("projectscbit@gmail.com");
    // Add recipient email address
    oSmtp->AddRecipientEx(_T("sathvika.chekuri@gmail.com"), 0);
    // Set email subject
    oSmtp->Subject = _T("simple email from Visual C++ with gmail account");
    // Set email body
    oSmtp->BodyText = _T("this is a test email sent from Visual C++ project with Gmail");
    // Gmail SMTP server address
    oSmtp->ServerAddr = _T("smtp.gmail.com");
    // Gmail user authentication should use your
    // Gmail email address as the user name.
    // For example: your email is "gmailid@gmail.com", then the user should be "gmailid@gmail.com"
    oSmtp->UserName = _T("projectscbit@gmail.com");
    oSmtp->Password = _T("iimjmrxnwnubglkk");
    // If you want to use direct SSL 465 port,
    // Please add this line, otherwise TLS will be used.
    // oSmtp->ServerPort = 465;
    // Set 25 or 587 SMTP port
    oSmtp->ServerPort = 587;
    // detect SSL/TLS automatically
    oSmtp->ConnectType = ConnectSSLAuto;
                                                               13
    _tprintf(_T("Start to send email via gmail account ...\r\n"));

    if(oSmtp->SendMail() == 0)
    {
        _tprintf(_T("email was sent successfully!\r\n"));
    }
    else
    {
        _tprintf(_T("failed to send email with the following error: %s\r\n"),
            (const TCHAR*)oSmtp->GetLastErrDescription());
    }
    return 0;
}
